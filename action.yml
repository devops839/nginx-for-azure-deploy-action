name: "NGINX Configuration Sync"
description: "Sync NGINX configuration from a git repo and/or certificates from an Azure Key Vault to an NGINXaaS for Azure deployment"
inputs:
  subscription-id:
    description: "The Azure subscription ID of the NGINXaaS for Azure deployment."
    required: true
  resource-group-name:
    description: "The resource group of the NGINXaaS for Azure deployment."
    required: true
  nginx-deployment-name:
    description: "The name of the NGINXaaS for Azure deployment."
    required: true
  nginx-config-directory-path:
    description: 'The NGINX configuration directory path relative to the root of the Git repository, example: "config/".'
    required: false
  nginx-root-config-file:
    description: >
      'The root NGINX configuration file path relative to the NGINX configuration directory in the Git repository, example: "nginx.conf".'
    required: false
    default: "nginx.conf"
  transformed-nginx-config-directory-path:
    description: >
      'The absolute directory path in the NGINXaaS for Azure deployment where your configuration files will be placed. 
      All files found in the nginx-config-directory-path will be copied to this location in the deployment. 
      For example, use "/etc/nginx/" to match the standard NGINX directory structure on your NGINXaaS deployment.
      If your NGINX configuration files use absolute paths in "include" directives, this setting ensures those paths are correctly mapped in the deployment by prepending the specified directory.'
    required: false
    default: ""
  nginx-certificates:
    description: >
      Certificates **in YAML (or JSON)**. Prefer YAML list of maps with keys:
      certificateName, keyvaultSecret, certificateVirtualPath, keyVirtualPath.
      Example (YAML):
        - certificateName: server1
          keyvaultSecret: https://example.vault.azure.net/secrets/server1/abc123
          certificateVirtualPath: /etc/nginx/certs/server1.crt
          keyVirtualPath: /etc/nginx/certs/server1.key
        - certificateName: server2
          keyvaultSecret: https://example.vault.azure.net/secrets/server2/def456
          certificateVirtualPath: /etc/nginx/certs/server2.crt
          keyVirtualPath: /etc/nginx/certs/server2.key
    required: false
  protected-files:
    description: "Comma-separated list of file paths relative to nginx-config-directory-path that should be marked as protected. Example: 'ssl/private.key,conf.d/secrets.conf'"
    required: false
    default: ""
  debug:
    description: "Enable/Disable debug output."
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    # If certificates were provided, normalize YAML/JSON -> compact JSON for the shell script
    - name: Normalize certificates input (YAML/JSON ➜ JSON)
      id: certs
      if: ${{ inputs.nginx-certificates != '' }}
      shell: bash
      run: |
        set -euo pipefail
        echo "▶ Writing raw certificates input to certs.yaml"
        printf "%s\n" "${{ inputs.nginx-certificates }}" > certs.yaml

        echo "▶ Downloading yq (static binary)"
        case "$(uname -s)" in
          Linux)  YQ_URL="https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64" ;;
          Darwin) YQ_URL="https://github.com/mikefarah/yq/releases/latest/download/yq_darwin_amd64" ;;
          *) echo "Unsupported OS"; exit 1 ;;
        esac
        curl -sSLf "$YQ_URL" -o yq
        chmod +x yq

        echo "▶ Converting input to JSON (yq -o=json)"
        ./yq -o=json '.' certs.yaml > certs.json

        # Compact to one line for safe CLI passing
        CERTS_JSON="$(tr -d '\n' < certs.json)"
        echo "json=$CERTS_JSON" >> "$GITHUB_OUTPUT"

    - name: "Synchronize NGINX certificate(s) from the Git repository to an NGINXaaS for Azure deployment"
      if: ${{ inputs.nginx-certificates != '' }}
      shell: bash
      run: ${{ github.action_path }}/src/deploy-certificate.sh \
           --subscription-id=${{ inputs.subscription-id }} \
           --resource-group-name=${{ inputs.resource-group-name }} \
           --nginx-deployment-name=${{ inputs.nginx-deployment-name }} \
           --certificates='${{ steps.certs.outputs.json }}' \
           --debug=${{ inputs.debug }}

    - name: "Synchronize NGINX configuration from the Git repository to an NGINXaaS for Azure deployment"
      if: ${{ inputs.nginx-config-directory-path != '' }}
      shell: bash
      run: ${{ github.action_path }}/src/deploy-config.sh \
           --subscription-id=${{ inputs.subscription-id }} \
           --resource-group-name=${{ inputs.resource-group-name }} \
           --nginx-deployment-name=${{ inputs.nginx-deployment-name }} \
           --nginx-config-directory-path=${{ inputs.nginx-config-directory-path }} \
           --nginx-root-config-file=${{ inputs.nginx-root-config-file }} \
           --transformed-nginx-config-directory-path=${{ inputs.transformed-nginx-config-directory-path }} \
           --protected-files=${{ inputs.protected-files }} \
           --debug=${{ inputs.debug }}
